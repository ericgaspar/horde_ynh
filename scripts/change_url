#!/bin/bash

#=================================================
# GENERIC START
#=================================================

# IMPORT GENERIC HELPERS
source /usr/share/yunohost/helpers

# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

# Import common cmd
source ./experimental_helper.sh
source ./_common.sh

ynh_script_progression --message="Loading installation settings..."

# RETRIEVE ARGUMENTS
old_domain=$YNH_APP_OLD_DOMAIN
domain=$YNH_APP_NEW_DOMAIN
path_url=$(ynh_normalize_url_path --path_url ${YNH_APP_NEW_PATH:-'/'})
app=$YNH_APP_INSTANCE_NAME

admin=$(ynh_app_setting_get --app $app --key admin)
final_path=$(ynh_app_setting_get --app $app --key final_path)
port=$(ynh_app_setting_get --app $app --key port)
secret_key=$(ynh_app_setting_get --app $app --key secret_key)
service_autodiscovery=$(ynh_app_setting_get --app $app --key service_autodiscovery)
db_name=$(ynh_app_setting_get --app $app --key db_name)
db_user=$(ynh_app_setting_get --app $app --key db_user)
db_pwd=$(ynh_app_setting_get --app $app --key mysqlpwd)

#=================================================
# STANDARD MODIFICATIONS
#=================================================

ynh_script_progression --message="Updating nginx configuration..."

# MODIFY URL IN NGINX CONF
nginx_conf_path=/etc/nginx/conf.d/$old_domain.d/$app.conf

# Change the domain for nginx
if [ "$old_domain" != "$domain" ]
then
    # Delete file checksum for the old conf file location
    ynh_delete_file_checksum --file "$nginx_conf_path"
    mv $nginx_conf_path /etc/nginx/conf.d/$domain.d/$app.conf
    # Store file checksum for the new config file location
    ynh_store_file_checksum --file "/etc/nginx/conf.d/$domain.d/$app.conf"
fi


#config_nginx

#=================================================
# MODIFY URL IN NGINX CONF
#=================================================
ynh_script_progression --message="Updating nginx web server configuration..." --time --weight=1

nginx_conf_path=/etc/nginx/conf.d/$old_domain.d/$app.conf

# Change the path in the nginx config file
if [ $change_path -eq 1 ]
then
	# Make a backup of the original nginx config file if modified
	ynh_backup_if_checksum_is_different --file="$nginx_conf_path"
	# Set global variables for nginx helper
	domain="$old_domain"
	path_url="$new_path"
	# Create a dedicated nginx config
	ynh_add_nginx_config
fi

# Change the domain for nginx
if [ $change_domain -eq 1 ]
then
	# Delete file checksum for the old conf file location
	ynh_delete_file_checksum --file="$nginx_conf_path"
	mv $nginx_conf_path /etc/nginx/conf.d/$new_domain.d/$app.conf
	# Store file checksum for the new config file location
	ynh_store_file_checksum --file="/etc/nginx/conf.d/$new_domain.d/$app.conf"
fi

#=================================================
# UPDATE HORDE CONFIG
#=================================================
ynh_script_progression --message="Configuring application..." --weight=3

    ynh_backup_if_checksum_is_different --file "$final_path/horde/config/conf.php"
    ynh_backup_if_checksum_is_different --file "$final_path/horde/imp/config/conf.php"
    ynh_backup_if_checksum_is_different --file "$final_path/horde/config/registry.local.php"
    ynh_backup_if_checksum_is_different --file "$final_path/horde/gollem/config/backends.local.php"
    ynh_backup_if_checksum_is_different --file "$final_path/horde/ingo/config/backends.local.php"

    cp ../conf/horde_conf.php "$final_path/horde/config/conf.php"
    ynh_replace_string --match_string __DOMAIN__ --replace_string "$domain" --target_file "$final_path/horde/config/conf.php"
    ynh_replace_string --match_string __PATH__ --replace_string "$path_url" --target_file "$final_path/horde/config/conf.php"
    ynh_replace_string --match_string __FINAL_PATH__ --replace_string "$final_path" --target_file "$final_path/horde/config/conf.php"
    ynh_replace_string --match_string __DB_NAME__ --replace_string "$db_name" --target_file "$final_path/horde/config/conf.php"
    ynh_replace_string --match_string __DB_USER__ --replace_string "$db_user" --target_file "$final_path/horde/config/conf.php"
    ynh_replace_string --match_string __DB_PASSWORD__ --replace_string "$db_pwd" --target_file "$final_path/horde/config/conf.php"
    ynh_replace_string --match_string __ADMIN_USER__ --replace_string "$admin" --target_file "$final_path/horde/config/conf.php"
    ynh_replace_string --match_string __SECRET_KEY__ --replace_string "$secret_key" --target_file "$final_path/horde/config/conf.php"
    
    cp ../conf/horde_imp_conf.php "$final_path/horde/imp/config/conf.php"
    
    cp ../conf/horde_registry.php "$final_path/horde/config/registry.local.php"
    ynh_replace_string --match_string __PATH__ --replace_string "$path_url" --target_file "$final_path/horde/config/registry.local.php"

    cp ../conf/gollem_backends.php "$final_path/horde/gollem/config/backends.local.php"
    ynh_replace_string --match_string __GOLLEM_DATA_DIR__ --replace_string "$gollem_data_dir" --target_file "$final_path/horde/gollem/config/backends.local.php"

    cp ../conf/ingo_backends.php "$final_path/horde/ingo/config/backends.local.php"

    ynh_store_file_checksum --file "$final_path/horde/config/conf.php"
    ynh_store_file_checksum --file "$final_path/horde/imp/config/conf.php"
    ynh_store_file_checksum --file "$final_path/horde/config/registry.local.php"
    ynh_store_file_checksum --file "$final_path/horde/gollem/config/backends.local.php"
    ynh_store_file_checksum --file "$final_path/horde/ingo/config/backends.local.php"

#=================================================
# RELOAD NGINX
#=================================================
ynh_script_progression --message="Reloading nginx web server..." --time --weight=1

ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Change of URL completed for $app" --time --last
