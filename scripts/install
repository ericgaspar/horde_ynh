#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

ynh_clean_setup () {
    ### Remove this function if there's nothing to clean before calling the remove script.
    true
}
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

domain=$YNH_APP_ARG_DOMAIN
path_url=$(ynh_normalize_url_path --path_url $YNH_APP_ARG_PATH)
admin=$YNH_APP_ARG_ADMIN
is_public=$YNH_APP_ARG_IS_PUBLIC
service_autodiscovery=$YNH_APP_ARG_SERVICE_AUTODISCOVERY
language=$YNH_APP_ARG_LANGUAGE
whups_install=$YNH_APP_ARG_WHUPS_INSTALL
sesha_install=$YNH_APP_ARG_SESHA_INSTALL
ansel_install=$YNH_APP_ARG_ANSEL_INSTALL
wicked_install=$YNH_APP_ARG_WICKED_INSTALL

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#=================================================
ynh_script_progression --message="Validating installation parameters..." --time --weight=1

final_path=/var/www/$app
test ! -e "$final_path" || ynh_die --message="This path already contains a folder"

# Register (book) web path
ynh_webpath_register --app=$app --domain=$domain --path_url=$path_url

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================
ynh_script_progression --message="Storing installation settings..." --time --weight=1

ynh_app_setting_set --app $app --key admin --value $admin
ynh_app_setting_set --app $app --key language --value $language
ynh_app_setting_set --app $app --key final_path --value $final_path
ynh_app_setting_set --app $app --key is_public --value $is_public
ynh_app_setting_set --app $app --key service_autodiscovery --value $service_autodiscovery
ynh_app_setting_set --app $app --key whups_install --value $whups_install
ynh_app_setting_set --app $app --key sesha_install --value $sesha_install
ynh_app_setting_set --app $app --key ansel_install --value $ansel_install
ynh_app_setting_set --app $app --key wicked_install --value $wicked_install




# Set list of optionnal app to install
optionnal_apps_list=""

ynh_script_progression --message="Configuring options and language..."

if [[ $whups_install == 1 ]]
then
    optionnal_apps_list="$optionnal_apps_list horde/whups"
fi
if [[ $sesha_install == 1 ]]
then
    optionnal_apps_list="$optionnal_apps_list horde/sesha"
fi
# if [[ $ansel_install == 1 ]]
# then
#     optionnal_apps_list="$optionnal_apps_list horde/ansel"
# fi
if [[ $wicked_install == 1 ]]
then
    optionnal_apps_list="$optionnal_apps_list horde/wicked"
fi

#=================================================
# STANDARD MODIFICATIONS
#=================================================

# Enable all necessary locales
if [[ "$language" != "en" ]]
then
    locale_lang=$(egrep -i "(${language})_\1\.UTF-8" /etc/locale.gen | egrep -o "[a-z]{2}_[A-Z]{2}\.UTF-8")
    for l in $locale_lang; do
        ynh_replace_string "^#\s$l" "$l" /etc/locale.gen
    done
    locale-gen
fi

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# CREATE A MYSQL DATABASE
#=================================================
ynh_script_progression --message="Creating a MySQL database..." --weight=2

db_name=$(ynh_sanitize_dbid --db_name $app)
db_user=$db_name
ynh_app_setting_set --app $app --key db_name --value $db_name
ynh_app_setting_set --app $app --key db_user --value $db_user
ynh_mysql_setup_db --db_name $db_name --db_user $db_user

#=================================================
# CREATE DEDICATED USER
#=================================================
ynh_script_progression --message="Configuring system user..." --weight=2

# Create a system user
ynh_system_user_create --username=$app



# Set execution for expect scripts
chmod +x ../conf/init_horde_install.exp
chmod +x ../conf/config_horde.exp



# Install horde by pear
ynh_script_progression --message="Creating base directory..."

gollem_data_dir="/home/yunohost.app/$app"

mkdir $final_path
mkdir $final_path/data
mkdir -p $gollem_data_dir



ynh_script_progression --message="Installing sources files..." --weight=7

pear config-create "$final_path" "$final_path/pear.conf"
pear -c "$final_path/pear.conf" install -o -f pear

pear_cmd="$final_path/pear/pear -c $final_path/pear.conf"

$pear_cmd config-set auto_discover 1
$pear_cmd config-set data_dir $final_path/data
$pear_cmd channel-discover pear.horde.org

$pear_cmd install horde/horde_role

../conf/init_horde_install.exp "$final_path" "$final_path/horde"

$pear_cmd config-set horde_dir "$final_path/horde"
$pear_cmd install -a -B horde/webmail $optionnal_apps_list

PHP_PEAR_SYSCONF_DIR=$final_path ../conf/config_horde.exp "$final_path" "$db_name" "$db_user" "$db_pwd" "$admin"
secret_key=$(grep 'secret_key' "$final_path/horde/config/conf.php" | cut -d"'" -f4)
ynh_app_setting_set --app $app --key secret_key --value "$secret_key"

#=================================================
# PATCH THE APP
#=================================================
ynh_script_progression --message="Patching application..." --weight=7

    local old_dir=$(pwd)
    (cd "$final_path/horde" && patch -p1 < $YNH_CWD/../sources/sso_auth.patch) || echo "Unable to apply patches"
    cd $old_dir

#=================================================
# CONFIGURE HORDE
#=================================================
ynh_script_progression --message="Configuring application..." --weight=3

    ynh_backup_if_checksum_is_different --file "$final_path/horde/config/conf.php"
    ynh_backup_if_checksum_is_different --file "$final_path/horde/imp/config/conf.php"
    ynh_backup_if_checksum_is_different --file "$final_path/horde/config/registry.local.php"
    ynh_backup_if_checksum_is_different --file "$final_path/horde/gollem/config/backends.local.php"
    ynh_backup_if_checksum_is_different --file "$final_path/horde/ingo/config/backends.local.php"

    cp ../conf/horde_conf.php "$final_path/horde/config/conf.php"
    ynh_replace_string --match_string __DOMAIN__ --replace_string "$domain" --target_file "$final_path/horde/config/conf.php"
    ynh_replace_string --match_string __PATH__ --replace_string "$path_url" --target_file "$final_path/horde/config/conf.php"
    ynh_replace_string --match_string __FINAL_PATH__ --replace_string "$final_path" --target_file "$final_path/horde/config/conf.php"
    ynh_replace_string --match_string __DB_NAME__ --replace_string "$db_name" --target_file "$final_path/horde/config/conf.php"
    ynh_replace_string --match_string __DB_USER__ --replace_string "$db_user" --target_file "$final_path/horde/config/conf.php"
    ynh_replace_string --match_string __DB_PASSWORD__ --replace_string "$db_pwd" --target_file "$final_path/horde/config/conf.php"
    ynh_replace_string --match_string __ADMIN_USER__ --replace_string "$admin" --target_file "$final_path/horde/config/conf.php"
    ynh_replace_string --match_string __SECRET_KEY__ --replace_string "$secret_key" --target_file "$final_path/horde/config/conf.php"
    
    cp ../conf/horde_imp_conf.php "$final_path/horde/imp/config/conf.php"
    
    cp ../conf/horde_registry.php "$final_path/horde/config/registry.local.php"
    ynh_replace_string --match_string __PATH__ --replace_string "$path_url" --target_file "$final_path/horde/config/registry.local.php"

    cp ../conf/gollem_backends.php "$final_path/horde/gollem/config/backends.local.php"
    ynh_replace_string --match_string __GOLLEM_DATA_DIR__ --replace_string "$gollem_data_dir" --target_file "$final_path/horde/gollem/config/backends.local.php"

    cp ../conf/ingo_backends.php "$final_path/horde/ingo/config/backends.local.php"

    ynh_store_file_checksum --file "$final_path/horde/config/conf.php"
    ynh_store_file_checksum --file "$final_path/horde/imp/config/conf.php"
    ynh_store_file_checksum --file "$final_path/horde/config/registry.local.php"
    ynh_store_file_checksum --file "$final_path/horde/gollem/config/backends.local.php"
    ynh_store_file_checksum --file "$final_path/horde/ingo/config/backends.local.php"

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring NGINX web server..." --weight=2

# Create a dedicated NGINX config
ynh_add_nginx_config

#=================================================
# PHP-FPM CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring PHP-FPM..." --weight=2

ynh_add_fpm_config --phpversion=$YNH_PHP_VERSION --package="$extra_php_dependencies"
phpversion=$(ynh_app_setting_get --app=$app --key=phpversion)

#=================================================
# SECURE FILES AND DIRECTORIES
#=================================================
ynh_script_progression --message="Protecting directory..."

chown -R www-data:$app $final_path
chown -R www-data:$app $gollem_data_dir
chmod u=rwX,g=rwX,o= -R $final_path
chmod u=rwX,g=rwX,o= -R $gollem_data_dir

#=================================================
# SETUP SSOWAT
#=================================================
ynh_script_progression --message="Configuring SSOwat..." --time --weight=1

if [ "$is_public" = "0" ];
then	# Retire l'accÃ¨s public
    ynh_app_setting_delete --app $app --key skipped_uris
else
    ynh_app_setting_set --app $app --key unprotected_uris --value "/"
fi

#=================================================
# SETUP LOGROTATE
#=================================================
ynh_script_progression --message="Configuring log rotation..."

ynh_use_logrotate $final_path/horde --nonappend --specific_user www-data/horde
ynh_use_logrotate $final_path/horde/services --append --specific_user www-data/horde
ynh_use_logrotate $final_path/horde/services/portal --append --specific_user www-data/horde

#=================================================
# RELOAD NGINX
#=================================================
ynh_script_progression --message="Reloading nginx web server..." --time --weight=1

ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Installation of $app completed" --time --last

